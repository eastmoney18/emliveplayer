apply plugin: 'com.android.library'

android {
    // http://tools.android.com/tech-docs/new-build-system/tips
    //noinspection GroovyAssignabilityCheck
    compileSdkVersion 30
    //noinspection GroovyAssignabilityCheck
    buildToolsVersion '28.0.3'

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jniLibs.srcDirs 'src/main/libs'
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
    }
}

repositories {
    flatDir {
        dirs'src/main/libs'
    }
}

dependencies {
    //compile fileTree(include: ['*.jar'], dir: 'src/main/libs')
     compileOnly (name:'exoplayer-core', ext: 'jar')
    //implementation 'com.google.android.exoplayer:exoplayer-core:r2.4.0'
}

task copyjar(){
    doLast{
//        println 'copy classes.jar to emlivesdkandroid'
//        copy {
//          //  from 'build/intermediates/bundles/release/classes.jar'
//            from 'build/intermediates/packaged-classes/release/classes.jar'
//            into '../../emlivesdkandroid/src/main/libs'
//            rename {'emliveplayer.jar'}
//        }
    }
}


afterEvaluate {
    tasks.matching {
        it.name.equals('assemble')
    }.each { tk ->
        tk.dependsOn(copyjar)
    }
}

//apply from: new File(rootProject.projectDir, "tools/gradle-on-demand.gradle");
